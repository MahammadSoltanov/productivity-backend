// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Productivity.Infrastructure.Persistence;

#nullable disable

namespace Productivity.Infrastructure.Migrations
{
    [DbContext(typeof(ProductivityDbContext))]
    partial class ProductivityDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Productivity.Domain.UserAggregate.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AuthenticationProvider")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("Productivity.Domain.UserAggregate.User", b =>
                {
                    b.OwnsOne("Productivity.Domain.UserAggregate.ValueObjects.AccountSettings", "AccountSettings", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("DefaultTimeZone")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("DefaultTimeZoneId");

                            b1.Property<string>("EnabledChannels")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("EnabledChannelsJson");

                            b1.Property<int>("ItemsPerPage")
                                .HasColumnType("int")
                                .HasColumnName("ItemsPerPage");

                            b1.Property<string>("MutedNotificationTypes")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("MutedNotificationTypesJson");

                            b1.Property<int>("Theme")
                                .HasColumnType("int")
                                .HasColumnName("Theme");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("AccountSettings")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
